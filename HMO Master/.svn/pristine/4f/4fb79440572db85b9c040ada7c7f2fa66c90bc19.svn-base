package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 12 14:25:19 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HMOMaster_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        HmoMasterHdrId,
        BusinessUnitId,
        HmoPlanName,
        HmoPlanYear,
        BupaEligibleCost,
        BupaCurrencyCode,
        Active,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        AxaLbCurrencyCode,
        AxaLbEligibleCost,
        HMOBupaDtl_EO,
        HMOTradDtl_EO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int HMOMASTERHDRID = AttributesEnum.HmoMasterHdrId.index();
    public static final int BUSINESSUNITID = AttributesEnum.BusinessUnitId.index();
    public static final int HMOPLANNAME = AttributesEnum.HmoPlanName.index();
    public static final int HMOPLANYEAR = AttributesEnum.HmoPlanYear.index();
    public static final int BUPAELIGIBLECOST = AttributesEnum.BupaEligibleCost.index();
    public static final int BUPACURRENCYCODE = AttributesEnum.BupaCurrencyCode.index();
    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int AXALBCURRENCYCODE = AttributesEnum.AxaLbCurrencyCode.index();
    public static final int AXALBELIGIBLECOST = AttributesEnum.AxaLbEligibleCost.index();
    public static final int HMOBUPADTL_EO = AttributesEnum.HMOBupaDtl_EO.index();
    public static final int HMOTRADDTL_EO = AttributesEnum.HMOTradDtl_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HMOMaster_EOImpl() {
    }

    /**
     * Gets the attribute value for HmoMasterHdrId, using the alias name HmoMasterHdrId.
     * @return the value of HmoMasterHdrId
     */
    public BigDecimal getHmoMasterHdrId() {
        return (BigDecimal) getAttributeInternal(HMOMASTERHDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoMasterHdrId.
     * @param value value to set the HmoMasterHdrId
     */
    public void setHmoMasterHdrId(BigDecimal value) {
        setAttributeInternal(HMOMASTERHDRID, value);
    }

    /**
     * Gets the attribute value for BusinessUnitId, using the alias name BusinessUnitId.
     * @return the value of BusinessUnitId
     */
    public BigDecimal getBusinessUnitId() {
        return (BigDecimal) getAttributeInternal(BUSINESSUNITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnitId.
     * @param value value to set the BusinessUnitId
     */
    public void setBusinessUnitId(BigDecimal value) {
        setAttributeInternal(BUSINESSUNITID, value);
    }

    /**
     * Gets the attribute value for HmoPlanName, using the alias name HmoPlanName.
     * @return the value of HmoPlanName
     */
    public String getHmoPlanName() {
        return (String) getAttributeInternal(HMOPLANNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoPlanName.
     * @param value value to set the HmoPlanName
     */
    public void setHmoPlanName(String value) {
        setAttributeInternal(HMOPLANNAME, value);
    }

    /**
     * Gets the attribute value for HmoPlanYear, using the alias name HmoPlanYear.
     * @return the value of HmoPlanYear
     */
    public String getHmoPlanYear() {
        return (String) getAttributeInternal(HMOPLANYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoPlanYear.
     * @param value value to set the HmoPlanYear
     */
    public void setHmoPlanYear(String value) {
        setAttributeInternal(HMOPLANYEAR, value);
    }

    /**
     * Gets the attribute value for BupaEligibleCost, using the alias name BupaEligibleCost.
     * @return the value of BupaEligibleCost
     */
    public BigDecimal getBupaEligibleCost() {
        return (BigDecimal) getAttributeInternal(BUPAELIGIBLECOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for BupaEligibleCost.
     * @param value value to set the BupaEligibleCost
     */
    public void setBupaEligibleCost(BigDecimal value) {
        setAttributeInternal(BUPAELIGIBLECOST, value);
    }

    /**
     * Gets the attribute value for BupaCurrencyCode, using the alias name BupaCurrencyCode.
     * @return the value of BupaCurrencyCode
     */
    public String getBupaCurrencyCode() {
        return (String) getAttributeInternal(BUPACURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BupaCurrencyCode.
     * @param value value to set the BupaCurrencyCode
     */
    public void setBupaCurrencyCode(String value) {
        setAttributeInternal(BUPACURRENCYCODE, value);
    }

    /**
     * Gets the attribute value for Active, using the alias name Active.
     * @return the value of Active
     */
    public String getActive() {
        return (String) getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Active.
     * @param value value to set the Active
     */
    public void setActive(String value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for AxaLbCurrencyCode, using the alias name AxaLbCurrencyCode.
     * @return the value of AxaLbCurrencyCode
     */
    public String getAxaLbCurrencyCode() {
        return (String) getAttributeInternal(AXALBCURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AxaLbCurrencyCode.
     * @param value value to set the AxaLbCurrencyCode
     */
    public void setAxaLbCurrencyCode(String value) {
        setAttributeInternal(AXALBCURRENCYCODE, value);
    }

    /**
     * Gets the attribute value for AxaLbEligibleCost, using the alias name AxaLbEligibleCost.
     * @return the value of AxaLbEligibleCost
     */
    public BigDecimal getAxaLbEligibleCost() {
        return (BigDecimal) getAttributeInternal(AXALBELIGIBLECOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for AxaLbEligibleCost.
     * @param value value to set the AxaLbEligibleCost
     */
    public void setAxaLbEligibleCost(BigDecimal value) {
        setAttributeInternal(AXALBELIGIBLECOST, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getHMOBupaDtl_EO() {
        return (RowIterator) getAttributeInternal(HMOBUPADTL_EO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getHMOTradDtl_EO() {
        return (RowIterator) getAttributeInternal(HMOTRADDTL_EO);
    }

    /**
     * @param hmoMasterHdrId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal hmoMasterHdrId) {
        return new Key(new Object[] { hmoMasterHdrId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.HMOMaster_EO");
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        RowIterator bupaRs = getHMOBupaDtl_EO();
       
        while (bupaRs.hasNext()) {
            //Delete all bupaRs
    bupaRs.next().remove();
        }

        RowIterator tradRs = getHMOTradDtl_EO();
        while (tradRs.hasNext()) {
            //Delete all tradRs
           
            tradRs.next().remove();
        }
        super.remove();
    }
}

