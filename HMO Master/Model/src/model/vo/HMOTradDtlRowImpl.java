package model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 26 14:23:25 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HMOTradDtlRowImpl extends ViewRowImpl {


    public static final int ENTITY_HMOTRADDTL_EO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CreatedBy,
        CreationDate,
        HmoMasterHdrId,
        HmoTradClass,
        HmoTradDtlId,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        TradCatAxamansardCost,
        TradCatLibertyBlueCost,
        TradCatRedcareCost,
        TradCategory,
        Trans_switch,
        Trans_Category,
        TradCatTypeCost,
        TradCategoryType,
        Trans_TraditionalCatType,
        HmoType,
        Tran_HmoType,
        HmoOptions,
        PreferredCategory,
        DependentOption,
        AssociatedCategoryCost,
        Lookup_ROVO,
        Lookup_self_ROVO,
        Lookup_others_ROVO,
        Lookup_Ref,
        Lookup_TraditionalCatType,
        LookupType_SVO,
        HMO_Options_ROVO1,
        HMO_Category_ROVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int HMOMASTERHDRID = AttributesEnum.HmoMasterHdrId.index();
    public static final int HMOTRADCLASS = AttributesEnum.HmoTradClass.index();
    public static final int HMOTRADDTLID = AttributesEnum.HmoTradDtlId.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int TRADCATAXAMANSARDCOST = AttributesEnum.TradCatAxamansardCost.index();
    public static final int TRADCATLIBERTYBLUECOST = AttributesEnum.TradCatLibertyBlueCost.index();
    public static final int TRADCATREDCARECOST = AttributesEnum.TradCatRedcareCost.index();
    public static final int TRADCATEGORY = AttributesEnum.TradCategory.index();
    public static final int TRANS_SWITCH = AttributesEnum.Trans_switch.index();
    public static final int TRANS_CATEGORY = AttributesEnum.Trans_Category.index();
    public static final int TRADCATTYPECOST = AttributesEnum.TradCatTypeCost.index();
    public static final int TRADCATEGORYTYPE = AttributesEnum.TradCategoryType.index();
    public static final int TRANS_TRADITIONALCATTYPE = AttributesEnum.Trans_TraditionalCatType.index();
    public static final int HMOTYPE = AttributesEnum.HmoType.index();
    public static final int TRAN_HMOTYPE = AttributesEnum.Tran_HmoType.index();
    public static final int HMOOPTIONS = AttributesEnum.HmoOptions.index();
    public static final int PREFERREDCATEGORY = AttributesEnum.PreferredCategory.index();
    public static final int DEPENDENTOPTION = AttributesEnum.DependentOption.index();
    public static final int ASSOCIATEDCATEGORYCOST = AttributesEnum.AssociatedCategoryCost.index();
    public static final int LOOKUP_ROVO = AttributesEnum.Lookup_ROVO.index();
    public static final int LOOKUP_SELF_ROVO = AttributesEnum.Lookup_self_ROVO.index();
    public static final int LOOKUP_OTHERS_ROVO = AttributesEnum.Lookup_others_ROVO.index();
    public static final int LOOKUP_REF = AttributesEnum.Lookup_Ref.index();
    public static final int LOOKUP_TRADITIONALCATTYPE = AttributesEnum.Lookup_TraditionalCatType.index();
    public static final int LOOKUPTYPE_SVO = AttributesEnum.LookupType_SVO.index();
    public static final int HMO_OPTIONS_ROVO1 = AttributesEnum.HMO_Options_ROVO1.index();
    public static final int HMO_CATEGORY_ROVO1 = AttributesEnum.HMO_Category_ROVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HMOTradDtlRowImpl() {
    }

    /**
     * Gets HMOTradDtl_EO entity object.
     * @return the HMOTradDtl_EO
     */
    public EntityImpl getHMOTradDtl_EO() {
        return (EntityImpl) getEntity(ENTITY_HMOTRADDTL_EO);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for HMO_MASTER_HDR_ID using the alias name HmoMasterHdrId.
     * @return the HMO_MASTER_HDR_ID
     */
    public BigDecimal getHmoMasterHdrId() {
        return (BigDecimal) getAttributeInternal(HMOMASTERHDRID);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_MASTER_HDR_ID using the alias name HmoMasterHdrId.
     * @param value value to set the HMO_MASTER_HDR_ID
     */
    public void setHmoMasterHdrId(BigDecimal value) {
        setAttributeInternal(HMOMASTERHDRID, value);
    }

    /**
     * Gets the attribute value for HMO_TRAD_CLASS using the alias name HmoTradClass.
     * @return the HMO_TRAD_CLASS
     */
    public String getHmoTradClass() {
        return (String) getAttributeInternal(HMOTRADCLASS);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_TRAD_CLASS using the alias name HmoTradClass.
     * @param value value to set the HMO_TRAD_CLASS
     */
    public void setHmoTradClass(String value) {
        setAttributeInternal(HMOTRADCLASS, value);
    }

    /**
     * Gets the attribute value for HMO_TRAD_DTL_ID using the alias name HmoTradDtlId.
     * @return the HMO_TRAD_DTL_ID
     */
    public BigDecimal getHmoTradDtlId() {
        return (BigDecimal) getAttributeInternal(HMOTRADDTLID);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_TRAD_DTL_ID using the alias name HmoTradDtlId.
     * @param value value to set the HMO_TRAD_DTL_ID
     */
    public void setHmoTradDtlId(BigDecimal value) {
        setAttributeInternal(HMOTRADDTLID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for TRAD_CAT_AXAMANSARD_COST using the alias name TradCatAxamansardCost.
     * @return the TRAD_CAT_AXAMANSARD_COST
     */
    public BigDecimal getTradCatAxamansardCost() {
        return (BigDecimal) getAttributeInternal(TRADCATAXAMANSARDCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAD_CAT_AXAMANSARD_COST using the alias name TradCatAxamansardCost.
     * @param value value to set the TRAD_CAT_AXAMANSARD_COST
     */
    public void setTradCatAxamansardCost(BigDecimal value) {
        setAttributeInternal(TRADCATAXAMANSARDCOST, value);
    }

    /**
     * Gets the attribute value for TRAD_CAT_LIBERTY_BLUE_COST using the alias name TradCatLibertyBlueCost.
     * @return the TRAD_CAT_LIBERTY_BLUE_COST
     */
    public BigDecimal getTradCatLibertyBlueCost() {
        return (BigDecimal) getAttributeInternal(TRADCATLIBERTYBLUECOST);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAD_CAT_LIBERTY_BLUE_COST using the alias name TradCatLibertyBlueCost.
     * @param value value to set the TRAD_CAT_LIBERTY_BLUE_COST
     */
    public void setTradCatLibertyBlueCost(BigDecimal value) {
        setAttributeInternal(TRADCATLIBERTYBLUECOST, value);
    }

    /**
     * Gets the attribute value for TRAD_CAT_REDCARE_COST using the alias name TradCatRedcareCost.
     * @return the TRAD_CAT_REDCARE_COST
     */
    public BigDecimal getTradCatRedcareCost() {
        return (BigDecimal) getAttributeInternal(TRADCATREDCARECOST);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAD_CAT_REDCARE_COST using the alias name TradCatRedcareCost.
     * @param value value to set the TRAD_CAT_REDCARE_COST
     */
    public void setTradCatRedcareCost(BigDecimal value) {
        setAttributeInternal(TRADCATREDCARECOST, value);
    }

    /**
     * Gets the attribute value for TRAD_CATEGORY using the alias name TradCategory.
     * @return the TRAD_CATEGORY
     */
    public String getTradCategory() {
        return (String) getAttributeInternal(TRADCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAD_CATEGORY using the alias name TradCategory.
     * @param value value to set the TRAD_CATEGORY
     */
    public void setTradCategory(String value) {
        setAttributeInternal(TRADCATEGORY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Trans_switch.
     * @return the Trans_switch
     */
    public String getTrans_switch() {
        return (String) getAttributeInternal(TRANS_SWITCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_switch.
     * @param value value to set the  Trans_switch
     */
    public void setTrans_switch(String value) {
        setAttributeInternal(TRANS_SWITCH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_Category.
     * @return the Trans_Category
     */
    public String getTrans_Category() {
        String type = null;
                       String name = null;
                       if (getTradCategory() != null) {
                           type = getTradCategory();
                           Row[] orgRows;
                           orgRows = getLookup_Ref().getFilteredRows("LookupValueCode", type);
                           System.err.println("Typee"+type);
                           if (orgRows.length > 0) {
                               name = orgRows[0].getAttribute("LookupValueNameDisp").toString();
                           }
                           return name;
                                                               } else {
        return (String) getAttributeInternal(TRANS_CATEGORY);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_Category.
     * @param value value to set the  Trans_Category
     */
    public void setTrans_Category(String value) {
        setAttributeInternal(TRANS_CATEGORY, value);
    }

    /**
     * Gets the attribute value for TRAD_CAT_TYPE_COST using the alias name TradCatTypeCost.
     * @return the TRAD_CAT_TYPE_COST
     */
    public BigDecimal getTradCatTypeCost() {
        return (BigDecimal) getAttributeInternal(TRADCATTYPECOST);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAD_CAT_TYPE_COST using the alias name TradCatTypeCost.
     * @param value value to set the TRAD_CAT_TYPE_COST
     */
    public void setTradCatTypeCost(BigDecimal value) {
        setAttributeInternal(TRADCATTYPECOST, value);
    }

    /**
     * Gets the attribute value for TRAD_CATEGORY_TYPE using the alias name TradCategoryType.
     * @return the TRAD_CATEGORY_TYPE
     */
    public String getTradCategoryType() {
        return (String) getAttributeInternal(TRADCATEGORYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAD_CATEGORY_TYPE using the alias name TradCategoryType.
     * @param value value to set the TRAD_CATEGORY_TYPE
     */
    public void setTradCategoryType(String value) {
        setAttributeInternal(TRADCATEGORYTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_TraditionalCatType.
     * @return the Trans_TraditionalCatType
     */
    public String getTrans_TraditionalCatType() {
        String type = null;
                       String name = null;
                       if (getTradCategoryType() != null) {
                           type = getTradCategoryType();
                           Row[] orgRows;
                           orgRows = getLookup_TraditionalCatType().getFilteredRows("LookupValueCode", type);
                           System.err.println("Typee"+type);
                           if (orgRows.length > 0) {
                               name = orgRows[0].getAttribute("LookupValueNameDisp").toString();
                           }
                           return name;
                                                               } else {
        return (String) getAttributeInternal(TRANS_TRADITIONALCATTYPE);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_TraditionalCatType.
     * @param value value to set the  Trans_TraditionalCatType
     */
    public void setTrans_TraditionalCatType(String value) {
        setAttributeInternal(TRANS_TRADITIONALCATTYPE, value);
    }

    /**
     * Gets the attribute value for HMO_TYPE using the alias name HmoType.
     * @return the HMO_TYPE
     */
    public String getHmoType() {
        return (String) getAttributeInternal(HMOTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_TYPE using the alias name HmoType.
     * @param value value to set the HMO_TYPE
     */
    public void setHmoType(String value) {
        setAttributeInternal(HMOTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Tran_HmoType.
     * @return the Tran_HmoType
     */
    public String getTran_HmoType() {
        return (String) getAttributeInternal(TRAN_HMOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Tran_HmoType.
     * @param value value to set the  Tran_HmoType
     */
    public void setTran_HmoType(String value) {
        setAttributeInternal(TRAN_HMOTYPE, value);
    }

    /**
     * Gets the attribute value for HMO_OPTIONS using the alias name HmoOptions.
     * @return the HMO_OPTIONS
     */
    public String getHmoOptions() {
        return (String) getAttributeInternal(HMOOPTIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_OPTIONS using the alias name HmoOptions.
     * @param value value to set the HMO_OPTIONS
     */
    public void setHmoOptions(String value) {
        setAttributeInternal(HMOOPTIONS, value);
    }

    /**
     * Gets the attribute value for PREFERRED_CATEGORY using the alias name PreferredCategory.
     * @return the PREFERRED_CATEGORY
     */
    public String getPreferredCategory() {
        return (String) getAttributeInternal(PREFERREDCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for PREFERRED_CATEGORY using the alias name PreferredCategory.
     * @param value value to set the PREFERRED_CATEGORY
     */
    public void setPreferredCategory(String value) {
        setAttributeInternal(PREFERREDCATEGORY, value);
    }

    /**
     * Gets the attribute value for DEPENDENT_OPTION using the alias name DependentOption.
     * @return the DEPENDENT_OPTION
     */
    public String getDependentOption() {
        return (String) getAttributeInternal(DEPENDENTOPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPENDENT_OPTION using the alias name DependentOption.
     * @param value value to set the DEPENDENT_OPTION
     */
    public void setDependentOption(String value) {
        setAttributeInternal(DEPENDENTOPTION, value);
    }

    /**
     * Gets the attribute value for ASSOCIATED_CATEGORY_COST using the alias name AssociatedCategoryCost.
     * @return the ASSOCIATED_CATEGORY_COST
     */
    public BigDecimal getAssociatedCategoryCost() {
        return (BigDecimal) getAttributeInternal(ASSOCIATEDCATEGORYCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSOCIATED_CATEGORY_COST using the alias name AssociatedCategoryCost.
     * @param value value to set the ASSOCIATED_CATEGORY_COST
     */
    public void setAssociatedCategoryCost(BigDecimal value) {
        setAttributeInternal(ASSOCIATEDCATEGORYCOST, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_ROVO.
     */
    public RowSet getLookup_ROVO() {
        return (RowSet) getAttributeInternal(LOOKUP_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_self_ROVO.
     */
    public RowSet getLookup_self_ROVO() {
        return (RowSet) getAttributeInternal(LOOKUP_SELF_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_others_ROVO.
     */
    public RowSet getLookup_others_ROVO() {
        return (RowSet) getAttributeInternal(LOOKUP_OTHERS_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_Ref.
     */
    public RowSet getLookup_Ref() {
        return (RowSet) getAttributeInternal(LOOKUP_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_TraditionalCatType.
     */
    public RowSet getLookup_TraditionalCatType() {
        return (RowSet) getAttributeInternal(LOOKUP_TRADITIONALCATTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LookupType_SVO.
     */
    public RowSet getLookupType_SVO() {
        return (RowSet) getAttributeInternal(LOOKUPTYPE_SVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> HMO_Options_ROVO1.
     */
    public RowSet getHMO_Options_ROVO1() {
        return (RowSet) getAttributeInternal(HMO_OPTIONS_ROVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> HMO_Category_ROVO1.
     */
    public RowSet getHMO_Category_ROVO1() {
        return (RowSet) getAttributeInternal(HMO_CATEGORY_ROVO1);
    }
}

